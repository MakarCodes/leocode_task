{"version":3,"sources":["components/User/styles.module.scss","styles.module.scss","components/UI/Spinner/styles.module.scss","components/UsersList/styles.module.scss","components/SearchInput/styles.module.scss","reducer/actionTypes.ts","helpers/updateObject.ts","reducer/fetchReducer.ts","helpers/variables.ts","components/UI/Spinner/Spinner.tsx","components/User/User.tsx","components/UsersList/UsersList.tsx","components/SearchInput/SearchInput.tsx","App.tsx","utilities/customHooks/useFetchLogic.ts","utilities/customHooks/useSearchLogic.ts","index.tsx"],"names":["module","exports","ActionTypes","updateObject","oldObject","updatedProperties","fetchReducer","state","action","type","FETCH_INIT","isLoading","fetchInit","FETCH_SUCCESS","data","payload","isError","fetchSuccess","FETCH_ERROR","fetchError","INITIAL_USERS_DATA","Spinner","className","classes","User","name","username","number","Item","Lp","Name","Username","UsersList","users","renderUsersList","map","index","id","length","List","SearchInput","searchPhrase","searchOnChange","placeholder","value","onChange","e","StyledInput","App","url","initialData","initialState","useReducer","dispatch","useEffect","a","fetch","response","json","result","fetchData","useFetchLogic","useState","setSearchPhrase","target","useSearchLogic","renderFilteredUsers","filter","toLowerCase","includes","Wrapper","Title","Content","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e4320b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"styles_Item__1NPl9\",\"Lp\":\"styles_Lp__2_ALY\",\"Name\":\"styles_Name__2kIgn\",\"Username\":\"styles_Username__2azU4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"styles_Wrapper__1bjMv\",\"Title\":\"styles_Title__R1sK0\",\"Content\":\"styles_Content__3z-Qg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"styles_Spinner__21q_S\",\"load6\":\"styles_load6__g2UOj\",\"round\":\"styles_round__BFY_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"styles_List__OC7Ty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StyledInput\":\"styles_StyledInput__36jjf\"};","export interface IInitialState<T> {\r\n  data: T;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n}\r\n\r\nexport enum ActionTypes {\r\n  FETCH_INIT = 'FETCH INIT',\r\n  FETCH_SUCCESS = 'FETCH SUCCESS',\r\n  FETCH_ERROR = 'FETCH ERROR',\r\n}\r\n\r\nexport type FetchInitAction = {\r\n  type: 'FETCH INIT';\r\n};\r\nexport type FetchSuccesstAction<T> = {\r\n  type: 'FETCH SUCCESS';\r\n  payload: { data: T };\r\n};\r\nexport type FetchErrorAction = {\r\n  type: 'FETCH ERROR';\r\n};\r\n\r\nexport type Actions<T> =\r\n  | FetchInitAction\r\n  | FetchSuccesstAction<T>\r\n  | FetchErrorAction;\r\n","interface IObject {\r\n  [key: string]: any;\r\n}\r\n\r\nexport const updateObject = <T>(oldObject: T, updatedProperties: IObject) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","// Import types\r\nimport {\r\n  IInitialState,\r\n  Actions,\r\n  ActionTypes,\r\n  FetchInitAction,\r\n  FetchSuccesstAction,\r\n  FetchErrorAction,\r\n} from './actionTypes';\r\n\r\n// Import helpers\r\nimport { updateObject } from '../helpers/updateObject';\r\n\r\nconst fetchInit = <T>(state: IInitialState<T>, action: FetchInitAction) =>\r\n  updateObject(state, { isLoading: true });\r\n\r\nconst fetchSuccess = <T>(\r\n  state: IInitialState<T>,\r\n  action: FetchSuccesstAction<T>\r\n) => {\r\n  const { data } = action.payload;\r\n  return updateObject(state, {\r\n    data,\r\n    isLoading: false,\r\n    isError: false,\r\n  });\r\n};\r\n\r\nconst fetchError = <T>(state: IInitialState<T>, action: FetchErrorAction) =>\r\n  updateObject(state, { isLoading: false, isError: true });\r\n\r\nexport const fetchReducer = <T>(\r\n  state: IInitialState<T>,\r\n  action: Actions<T>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.FETCH_INIT:\r\n      return fetchInit(state, action);\r\n    case ActionTypes.FETCH_SUCCESS:\r\n      return fetchSuccess(state, action);\r\n    case ActionTypes.FETCH_ERROR:\r\n      return fetchError(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// USERS URL\r\nexport const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\r\n\r\n// INITIAL USERS DATA\r\nexport const INITIAL_USERS_DATA: IUser[] = [];\r\n","import classes from './styles.module.scss';\r\n\r\nconst Spinner = () => {\r\n  return <div className={classes.Spinner}>Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\n// Import styles\r\nimport classes from './styles.module.scss';\r\n\r\ninterface IProps {\r\n  name: string;\r\n  username: string;\r\n  number: number;\r\n}\r\n\r\nconst User: React.FC<IProps> = ({ name, username, number }) => {\r\n  return (\r\n    <div className={classes.Item}>\r\n      <span className={classes.Lp}>{number}</span>\r\n      <span className={classes.Name}>{name}</span>\r\n      <span className={classes.Username}>{username}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\n\r\n// Import components\r\nimport User from '../User/User';\r\n\r\n// Import styles\r\nimport classes from './styles.module.scss';\r\n\r\ninterface IProps {\r\n  users: IUser[];\r\n}\r\n\r\nconst UsersList: React.FC<IProps> = ({ users }) => {\r\n  const renderUsersList = users.map(({ id, name, username }, index) => (\r\n    <User key={id} name={name} username={username} number={index + 1} />\r\n  ));\r\n  return (\r\n    <>\r\n      {users.length ? (\r\n        <div className={classes.List}>{renderUsersList}</div>\r\n      ) : (\r\n        <p>No results...</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import { ChangeEvent } from 'react';\r\n\r\n// Import styles\r\nimport classes from './styles.module.scss';\r\n\r\ninterface IProps {\r\n  searchPhrase: string;\r\n  searchOnChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst SearchInput: React.FC<IProps> = ({ searchPhrase, searchOnChange }) => (\r\n  <input\r\n    type='text'\r\n    placeholder='Search'\r\n    value={searchPhrase}\r\n    onChange={e => searchOnChange(e)}\r\n    className={classes.StyledInput}\r\n  />\r\n);\r\nexport default SearchInput;\r\n","// Import custom hooks\nimport { useFetchLogic } from './utilities/customHooks/useFetchLogic';\nimport { useSearchLogic } from './utilities/customHooks/useSearchLogic';\n\n// Import variables\nimport { USERS_URL, INITIAL_USERS_DATA } from './helpers/variables';\n\n// Import components\nimport Spinner from './components/UI/Spinner';\nimport UsersList from './components/UsersList';\nimport SearchInput from './components/SearchInput/SearchInput';\n\n// Import styles\nimport classes from './styles.module.scss';\n\nconst App = () => {\n  const { data, isLoading, isError } = useFetchLogic(\n    USERS_URL,\n    INITIAL_USERS_DATA\n  );\n\n  const { searchPhrase, searchOnChange } = useSearchLogic();\n\n  const renderFilteredUsers = data.filter(({ name }) =>\n    name.toLowerCase().includes(searchPhrase.toLowerCase())\n  );\n\n  return (\n    <div className={classes.Wrapper}>\n      <h1 className={classes.Title}>Users List</h1>\n      <div className={classes.Content}>\n        <SearchInput\n          searchPhrase={searchPhrase}\n          searchOnChange={searchOnChange}\n        />\n        {!isLoading ? <UsersList users={renderFilteredUsers} /> : <Spinner />}\n        {!isLoading && isError && (\n          <p>Sorry, error has occured. Please try later.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { useReducer, useEffect, Reducer } from 'react';\r\n\r\n// Import reducer\r\nimport { fetchReducer } from '../../reducer/fetchReducer';\r\n\r\n// Import action types\r\nimport { ActionTypes, Actions, IInitialState } from '../../reducer/actionTypes';\r\n\r\nexport const useFetchLogic = <T>(url: string, initialData: T) => {\r\n  const initialState: IInitialState<T> = {\r\n    data: initialData,\r\n    isLoading: false,\r\n    isError: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer<Reducer<IInitialState<T>, Actions<T>>>(\r\n    fetchReducer,\r\n    initialState\r\n  );\r\n\r\n  const { data, isLoading, isError } = state;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch({\r\n        type: ActionTypes.FETCH_INIT,\r\n      });\r\n      try {\r\n        const response = await fetch(url);\r\n        const result = await response.json();\r\n        dispatch({\r\n          type: ActionTypes.FETCH_SUCCESS,\r\n          payload: {\r\n            data: result,\r\n          },\r\n        });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: ActionTypes.FETCH_ERROR,\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { data, isLoading, isError };\r\n};\r\n","import { useState, ChangeEvent } from 'react';\r\n\r\nexport const useSearchLogic = () => {\r\n  const [searchPhrase, setSearchPhrase] = useState('');\r\n\r\n  const handleSearchOnChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setSearchPhrase(e.target.value);\r\n\r\n  return { searchPhrase, searchOnChange: handleSearchOnChange };\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Import global styles\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}